<idea-plugin version="2">
    <id>no.tornado.tornadofx.idea</id>
    <name>TornadoFX</name>
    <version>1.5.5.4</version>
    <vendor email="es@syse.no" url="https://www.syse.no">SYSE</vendor>
    <description>Run configurations, templates, actions and intentions for TornadoFX.</description>
    <description><![CDATA[
      TornadoFX support
    ]]></description>

    <change-notes><![CDATA[
        <h4>1.5.5.4 - 2016-08-21</h4>
        <ul>
            <li>Generate ViewModel from model class</li>
        </ul>
        <h4>1.5.5.3 - 2016-08-20</h4>
        <ul>
            <li>Generate properties from constructor parameters</li>
            <li>TableView Add Columns works for all builder styles</li>
        </ul>
        <h4>1.5.5.1 - 2016-08-20</h4>
        <ul>
            <li>Fixed cast exception in configuration producer</li>
        </ul>
        <h4>1.5.5 - 2016-08-19</h4>
        <ul>
            <li>Gutter icon/action for running View and App directly</li>
            <li>New View now uses the new syntax for view root types that has a builder</li>
        </ul>
        <h4>1.5.4.1 - 2016-08-03</h4>
        <ul>
            <li>OSGi Declarative Services Template</li>
            <li>Better dependencies and build for OSGi templates</li>
            <li>Templates support configurable group and name</li>
        </ul>
        <h4>1.5.4 - 2016-08-03</h4>
        <ul>
            <li>TornadoFX Version 1.5.4</li>
        </ul>
        <h4>1.5.3 - 2016-08-02</h4>
        <ul>
            <li>OSGi project template</li>
        </ul>
        <h4>1.5.2 - 2016-07-23</h4>
        <ul>
            <li>Gradle project template</li>
            <li>Multi module Gradle support</li>
            <li>New View action can also create new Fragment</li>
            <li>"Inject Component" injects Fragments using the `fragment()` delegate</li>
            <li>Fixed an <a href="https://github.com/edvin/tornadofx-idea-plugin/issues/2">exception on plugin startup</a></li>
        </ul>
        <h4>1.0.5 - 2016-05-18</h4>
        <ul>
            <li>Dev mod options in Run Config: Live Views / Live Stylesheets</li>
        </ul>
        <h4>1.0.4 - 2016-05-18</h4>
        <ul>
            <li>Inject Component generator</li>
        </ul>
        <h4>1.0.3 - 2016-05-17</h4>
        <ul>
            <li>Add view class based on FXML or Code</li>
        </ul>
        <h4>1.0.2 - 2016-05-16</h4>
        <ul>
            <li>Fixed missing source dir annotation for Maven template</li>
        </ul>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="141.0"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->

    <depends>com.intellij.modules.java</depends>
    <depends>org.jetbrains.kotlin</depends>

    <extensions defaultExtensionNs="com.intellij">

        <!--<fileEditorProvider implementation="no.tornado.tornadofx.idea.editors.ViewEditorProvider"/>-->

        <projectTemplate projectType="TornadoFX" templatePath="projectTemplates/tornadofx-maven-project.zip" category="true"/>
        <projectTemplate projectType="TornadoFX" templatePath="projectTemplates/tornadofx-maven-osgi-project.zip" category="true"/>
        <projectTemplate projectType="TornadoFX" templatePath="projectTemplates/tornadofx-maven-osgi-ds-project.zip" category="true"/>
        <projectTemplate projectType="TornadoFX" templatePath="projectTemplates/tornadofx-gradle-project.zip" category="true"/>
        <!--<moduleBuilder builderClass="no.tornado.tornadofx.idea.TornadoFXModuleBuilder" id="TORNADOFX_STEP" order="last"/>-->

        <intentionAction>
            <className>no.tornado.tornadofx.idea.intentions.FXPropertyConverter</className>
            <category>Kotlin</category>
        </intentionAction>

        <intentionAction>
            <className>no.tornado.tornadofx.idea.intentions.GenerateViewModel</className>
            <category>Kotlin</category>
        </intentionAction>

        <intentionAction>
            <className>no.tornado.tornadofx.idea.intentions.AddTableViewColumns</className>
            <category>Kotlin</category>
        </intentionAction>

        <configurationType implementation="no.tornado.tornadofx.idea.configurations.TornadoFXConfigurationType"/>
        <runConfigurationProducer implementation="no.tornado.tornadofx.idea.configurations.TornadoFXRunConfigurationProducer"/>

        <runLineMarkerContributor language="kotlin"
                                  implementationClass="no.tornado.tornadofx.idea.configurations.TornadoFXRunLineMarkerContributor"/>

        <!--<framework.type implementation="no.tornado.tornadofx.idea.framework.TornadoFXFramework"/>-->

        <internalFileTemplate name="TornadoFX Code View"/>
        <internalFileTemplate name="TornadoFX FXML View"/>
        <internalFileTemplate name="TornadoFX FXML ViewResource"/>

    </extensions>

    <project-components>
        <component>
            <implementation-class>no.tornado.tornadofx.idea.intentions.FXPropertyConverter</implementation-class>
        </component>
        <component>
            <implementation-class>no.tornado.tornadofx.idea.intentions.GenerateViewModel</implementation-class>
        </component>
    </project-components>

    <actions>
        <action id="createNewView" class="no.tornado.tornadofx.idea.actions.NewViewAction" text="TornadoFX View"
                description="Generate a new TornadoFX View" icon="/icons/action.png">
            <add-to-group group-id="NewGroup" anchor="after" relative-to-action="Kotlin.NewFile"/>
        </action>
        <action id="injectResource" class="no.tornado.tornadofx.idea.actions.InjectComponentAction" text="Inject TornadoFX Component"
                description="Inject TornadoFX Component into the current Component" icon="/icons/action.png">
            <add-to-group group-id="GenerateGroup" anchor="last"/>
        </action>
    </actions>

</idea-plugin>